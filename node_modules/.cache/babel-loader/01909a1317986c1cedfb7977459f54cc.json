{"ast":null,"code":"var _jsxFileName = \"c:\\\\Users\\\\ngohu\\\\Desktop\\\\hoc-renderprops-15122019\\\\src\\\\RenderProps\\\\RenderDanhSachKhoaHoc.js\";\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { layDanhSachKhoaHoc, changePageAction } from \"../redux/actions/QuanLyKhoaHoc\"; // render props là một kĩ thuật xử lý \bviệc chia sẻ logic giữa các React Component bằng cách sử dụng prop có value như một function.\n\nconst RenderDanhSachKhoaHoc = props => {\n  const dispatch = useDispatch();\n\n  const _useSelector = useSelector(state => state.quanLyKhoaHoc),\n        danhSachKhoaHoc = _useSelector.danhSachKhoaHoc,\n        currentPage = _useSelector.currentPage,\n        totalCount = _useSelector.totalCount;\n\n  useEffect(() => {\n    dispatch(layDanhSachKhoaHoc(currentPage, 8));\n  }, [currentPage]);\n\n  const onChangePage = page => {\n    dispatch(changePageAction(page));\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, props.render({\n    danhSachKhoaHoc,\n    currentPage,\n    totalCount,\n    onChangePage\n  }));\n};\n\nexport default RenderDanhSachKhoaHoc;","map":{"version":3,"sources":["c:/Users/ngohu/Desktop/hoc-renderprops-15122019/src/RenderProps/RenderDanhSachKhoaHoc.js"],"names":["React","useEffect","useDispatch","useSelector","layDanhSachKhoaHoc","changePageAction","RenderDanhSachKhoaHoc","props","dispatch","state","quanLyKhoaHoc","danhSachKhoaHoc","currentPage","totalCount","onChangePage","page","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SACEC,kBADF,EAEEC,gBAFF,QAGO,gCAHP,C,CAKA;;AACA,MAAMC,qBAAqB,GAAGC,KAAK,IAAI;AACrC,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;;AADqC,uBAEgBC,WAAW,CAC9DM,KAAK,IAAIA,KAAK,CAACC,aAD+C,CAF3B;AAAA,QAE7BC,eAF6B,gBAE7BA,eAF6B;AAAA,QAEZC,WAFY,gBAEZA,WAFY;AAAA,QAECC,UAFD,gBAECA,UAFD;;AAOrCZ,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,QAAQ,CAACJ,kBAAkB,CAACQ,WAAD,EAAc,CAAd,CAAnB,CAAR;AACD,GAFQ,EAEN,CAACA,WAAD,CAFM,CAAT;;AAIA,QAAME,YAAY,GAAGC,IAAI,IAAI;AAC3BP,IAAAA,QAAQ,CAACH,gBAAgB,CAACU,IAAD,CAAjB,CAAR;AACD,GAFD;;AAIA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEGR,KAAK,CAACS,MAAN,CAAa;AAAEL,IAAAA,eAAF;AAAmBC,IAAAA,WAAnB;AAAgCC,IAAAA,UAAhC;AAA4CC,IAAAA;AAA5C,GAAb,CAFH,CADF;AAMD,CArBD;;AAuBA,eAAeR,qBAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  layDanhSachKhoaHoc,\n  changePageAction\n} from \"../redux/actions/QuanLyKhoaHoc\";\n\n// render props là một kĩ thuật xử lý \bviệc chia sẻ logic giữa các React Component bằng cách sử dụng prop có value như một function.\nconst RenderDanhSachKhoaHoc = props => {\n  const dispatch = useDispatch();\n  const { danhSachKhoaHoc, currentPage, totalCount } = useSelector(\n    state => state.quanLyKhoaHoc\n    \n  );\n\n  useEffect(() => {\n    dispatch(layDanhSachKhoaHoc(currentPage, 8));\n  }, [currentPage]);\n\n  const onChangePage = page => {\n    dispatch(changePageAction(page));\n  };\n\n  return (\n    <div>\n      {/* Tên props trả về không nhất thiet phải là render, có thể đặt tên tuỳ ý ví dụ renderContent,....  */}\n      {props.render({ danhSachKhoaHoc, currentPage, totalCount, onChangePage })}\n    </div>\n  );\n};\n\nexport default RenderDanhSachKhoaHoc;\n"]},"metadata":{},"sourceType":"module"}