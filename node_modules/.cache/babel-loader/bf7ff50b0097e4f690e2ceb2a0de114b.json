{"ast":null,"code":"import React from\"react\";import{useDispatch}from\"react-redux\";import{Formik,Field,ErrorMessage}from\"formik\";import{Form,FormGroup,Label,Input,FormFeedback,Button}from\"reactstrap\";import{dangKyAction}from\"../redux/actions/QuanLyNguoiDung\";var validate=function validate(values){var errors={};Object.keys(values).forEach(function(key){if(!values[key]){errors[key]=\"Required\";}});if(values.email.indexOf(\"@\")===-1){errors.email=\"Email not valid\";}//   Tuỳ ý thêm validation vào\nreturn errors;};var DangKy=function DangKy(props){var dispatch=useDispatch();var handleRegisterSuccess=function handleRegisterSuccess(){// Hàm callback này sẽ chạy khi được gọi bên action\nprops.history.push(\"/login\");};return React.createElement(\"div\",null,React.createElement(\"h1\",null,\"Form \\u0110\\u0103ng K\\xFD\"),React.createElement(Formik,{initialValues:{taiKhoan:\"\",matKhau:\"\",hoTen:\"\",soDT:\"\",email:\"\"},validate:validate,onSubmit:function onSubmit(values){return dispatch(dangKyAction(values,handleRegisterSuccess));}},function(_ref){var handleChange=_ref.handleChange,handleBlur=_ref.handleBlur,handleSubmit=_ref.handleSubmit,values=_ref.values,errors=_ref.errors,touched=_ref.touched;return React.createElement(Form,null,React.createElement(FormGroup,null,React.createElement(Label,null,\"T\\xE0i Kho\\u1EA3n\"),React.createElement(Input,{tag:Field,type:\"text\",name:\"taiKhoan\"}),React.createElement(ErrorMessage,{name:\"taiKhoan\"})),React.createElement(FormGroup,null,React.createElement(Label,null,\"M\\u1EADt Kh\\u1EA9u\"),React.createElement(Input,{type:\"password\",name:\"matKhau\",tag:Field}),React.createElement(ErrorMessage,{name:\"matKhau\"})),React.createElement(FormGroup,null,React.createElement(Label,null,\"H\\u1ECD t\\xEAn\"),React.createElement(Input,{type:\"text\",name:\"hoTen\",tag:Field}),React.createElement(ErrorMessage,{name:\"hoTen\"})),React.createElement(FormGroup,null,React.createElement(Label,null,\"S\\u1ED1 \\u0111i\\u1EC7n tho\\u1EA1i\"),React.createElement(Input,{type:\"text\",name:\"soDT\",tag:Field}),React.createElement(ErrorMessage,{name:\"soDT\"})),React.createElement(FormGroup,null,React.createElement(Label,null,\"Email\"),React.createElement(Input,{type:\"email\",name:\"email\",tag:Field}),React.createElement(ErrorMessage,{name:\"email\"})),React.createElement(Button,{onClick:handleSubmit,color:\"primary\"},\"\\u0110\\u0103ng K\\xFD\"));}));};export default DangKy;","map":{"version":3,"sources":["C:/Users/ngohu/Desktop/hoc-renderprops-15122019/src/Elearning/DangKy.js"],"names":["React","useDispatch","Formik","Field","ErrorMessage","Form","FormGroup","Label","Input","FormFeedback","Button","dangKyAction","validate","values","errors","Object","keys","forEach","key","email","indexOf","DangKy","props","dispatch","handleRegisterSuccess","history","push","taiKhoan","matKhau","hoTen","soDT","handleChange","handleBlur","handleSubmit","touched"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Formik, Field, ErrorMessage } from \"formik\";\nimport {\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  FormFeedback,\n  Button\n} from \"reactstrap\";\nimport { dangKyAction } from \"../redux/actions/QuanLyNguoiDung\";\n\nconst validate = values => {\n  let errors = {};\n  Object.keys(values).forEach(key => {\n    if (!values[key]) {\n      errors[key] = \"Required\";\n    }\n  });\n  if (values.email.indexOf(\"@\") === -1) {\n    errors.email = \"Email not valid\";\n  }\n  //   Tuỳ ý thêm validation vào\n  return errors;\n};\n\nconst DangKy = props => {\n  const dispatch = useDispatch();\n\n  const handleRegisterSuccess = () => {\n    // Hàm callback này sẽ chạy khi được gọi bên action\n    props.history.push(\"/login\");\n  };\n\n  return (\n    <div>\n      <h1>Form Đăng Ký</h1>\n      <Formik\n        initialValues={{\n          taiKhoan: \"\",\n          matKhau: \"\",\n          hoTen: \"\",\n          soDT: \"\",\n          email: \"\"\n        }}\n        validate={validate}\n        onSubmit={values =>\n          dispatch(dangKyAction(values, handleRegisterSuccess))\n        }\n      >\n        {({\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          values,\n          errors,\n          touched\n        }) => {\n          return (\n            <Form>\n              <FormGroup>\n                <Label>Tài Khoản</Label>\n                {/* <Input\n                type=\"text\"\n                name=\"taiKhoan\"\n                // Cần 3 props này nếu không dùng Field của formik\n                value={values.taiKhoan}\n                handleChange={handleChange}\n                handleBlur={handleBlur}\n              />\n              {errors.taiKhoan && touched.taiKhoan && (\n                // Cần tự kiểm tra errors và touched nếu không dùng ErrorMessage\n                <FormFeedback>{errors.taiKhoan}</FormFeedback>\n              )} */}\n                {/* Đối với reactstrap sử dụng như thế này */}\n                <Input tag={Field} type=\"text\" name=\"taiKhoan\" />\n                {/* Thông thường sử dụng Field như thế này */}\n                {/* <Field type=\"text\" name=\"taiKhoan\" component={Input} /> */}\n                <ErrorMessage name=\"taiKhoan\" />\n              </FormGroup>\n              <FormGroup>\n                <Label>Mật Khẩu</Label>\n                <Input type=\"password\" name=\"matKhau\" tag={Field} />\n                <ErrorMessage name=\"matKhau\" />\n              </FormGroup>\n              <FormGroup>\n                <Label>Họ tên</Label>\n                <Input type=\"text\" name=\"hoTen\" tag={Field} />\n                <ErrorMessage name=\"hoTen\" />\n              </FormGroup>\n              <FormGroup>\n                <Label>Số điện thoại</Label>\n                <Input type=\"text\" name=\"soDT\" tag={Field} />\n                <ErrorMessage name=\"soDT\" />\n              </FormGroup>\n              <FormGroup>\n                <Label>Email</Label>\n                <Input type=\"email\" name=\"email\" tag={Field} />\n                <ErrorMessage name=\"email\" />\n              </FormGroup>\n              <Button onClick={handleSubmit} color=\"primary\">\n                Đăng Ký\n              </Button>\n            </Form>\n          );\n        }}\n      </Formik>\n    </div>\n  );\n};\n\nexport default DangKy;\n"]},"metadata":{},"sourceType":"module"}