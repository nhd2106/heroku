{"ast":null,"code":"var _jsxFileName = \"c:\\\\Users\\\\Duoc Ngo\\\\Desktop\\\\hoc-renderprops-15122019\\\\src\\\\Elearning\\\\DangKy.js\";\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Formik, Field, ErrorMessage } from \"formik\";\nimport { Form, FormGroup, Label, Input, FormFeedback, Button } from \"reactstrap\";\nimport { dangKyAction } from \"../redux/actions/QuanLyNguoiDung\";\n\nconst validate = values => {\n  let errors = {};\n  Object.keys(values).forEach(key => {\n    if (!values[key]) {\n      errors[key] = \"Required\";\n    }\n  });\n\n  if (values.email.indexOf(\"@\") === -1) {\n    errors.email = \"Email not valid\";\n  } //   Tuỳ ý thêm validation vào\n\n\n  return errors;\n};\n\nconst DangKy = props => {\n  const dispatch = useDispatch();\n\n  const handleRegisterSuccess = () => {\n    // Hàm callback này sẽ chạy khi được gọi bên action\n    props.history.push(\"/login\");\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Form \\u0110\\u0103ng K\\xFD\"), React.createElement(Formik, {\n    initialValues: {\n      taiKhoan: \"\",\n      matKhau: \"\",\n      hoTen: \"\",\n      soDT: \"\",\n      email: \"\"\n    },\n    validate: validate,\n    onSubmit: values => dispatch(dangKyAction(values, handleRegisterSuccess)),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, ({\n    handleChange,\n    handleBlur,\n    handleSubmit,\n    values,\n    errors,\n    touched\n  }) => {\n    return React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"T\\xE0i Kho\\u1EA3n\"), React.createElement(Input, {\n      tag: Field,\n      type: \"text\",\n      name: \"taiKhoan\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(ErrorMessage, {\n      name: \"taiKhoan\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"M\\u1EADt Kh\\u1EA9u\"), React.createElement(Input, {\n      type: \"password\",\n      name: \"matKhau\",\n      tag: Field,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(ErrorMessage, {\n      name: \"matKhau\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"H\\u1ECD t\\xEAn\"), React.createElement(Input, {\n      type: \"text\",\n      name: \"hoTen\",\n      tag: Field,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(ErrorMessage, {\n      name: \"hoTen\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"S\\u1ED1 \\u0111i\\u1EC7n tho\\u1EA1i\"), React.createElement(Input, {\n      type: \"text\",\n      name: \"soDT\",\n      tag: Field,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(ErrorMessage, {\n      name: \"soDT\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Email\"), React.createElement(Input, {\n      type: \"email\",\n      name: \"email\",\n      tag: Field,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), React.createElement(ErrorMessage, {\n      name: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    })), React.createElement(Button, {\n      onClick: handleSubmit,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"\\u0110\\u0103ng K\\xFD\"));\n  }));\n};\n\nexport default DangKy;","map":{"version":3,"sources":["c:/Users/Duoc Ngo/Desktop/hoc-renderprops-15122019/src/Elearning/DangKy.js"],"names":["React","useDispatch","Formik","Field","ErrorMessage","Form","FormGroup","Label","Input","FormFeedback","Button","dangKyAction","validate","values","errors","Object","keys","forEach","key","email","indexOf","DangKy","props","dispatch","handleRegisterSuccess","history","push","taiKhoan","matKhau","hoTen","soDT","handleChange","handleBlur","handleSubmit","touched"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Formik, Field, ErrorMessage } from \"formik\";\nimport {\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  FormFeedback,\n  Button\n} from \"reactstrap\";\nimport { dangKyAction } from \"../redux/actions/QuanLyNguoiDung\";\n\nconst validate = values => {\n  let errors = {};\n  Object.keys(values).forEach(key => {\n    if (!values[key]) {\n      errors[key] = \"Required\";\n    }\n  });\n  if (values.email.indexOf(\"@\") === -1) {\n    errors.email = \"Email not valid\";\n  }\n  //   Tuỳ ý thêm validation vào\n  return errors;\n};\n\nconst DangKy = props => {\n  const dispatch = useDispatch();\n\n  const handleRegisterSuccess = () => {\n    // Hàm callback này sẽ chạy khi được gọi bên action\n    props.history.push(\"/login\");\n  };\n\n  return (\n    <div>\n      <h1>Form Đăng Ký</h1>\n      <Formik\n        initialValues={{\n          taiKhoan: \"\",\n          matKhau: \"\",\n          hoTen: \"\",\n          soDT: \"\",\n          email: \"\"\n        }}\n        validate={validate}\n        onSubmit={values =>\n          dispatch(dangKyAction(values, handleRegisterSuccess))\n        }\n      >\n        {({\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          values,\n          errors,\n          touched\n        }) => {\n          return (\n            <Form>\n              <FormGroup>\n                <Label>Tài Khoản</Label>\n                {/* <Input\n                type=\"text\"\n                name=\"taiKhoan\"\n                // Cần 3 props này nếu không dùng Field của formik\n                value={values.taiKhoan}\n                handleChange={handleChange}\n                handleBlur={handleBlur}\n              />\n              {errors.taiKhoan && touched.taiKhoan && (\n                // Cần tự kiểm tra errors và touched nếu không dùng ErrorMessage\n                <FormFeedback>{errors.taiKhoan}</FormFeedback>\n              )} */}\n                {/* Đối với reactstrap sử dụng như thế này */}\n                <Input tag={Field} type=\"text\" name=\"taiKhoan\" />\n                {/* Thông thường sử dụng Field như thế này */}\n                {/* <Field type=\"text\" name=\"taiKhoan\" component={Input} /> */}\n                <ErrorMessage name=\"taiKhoan\" />\n              </FormGroup>\n              <FormGroup>\n                <Label>Mật Khẩu</Label>\n                <Input type=\"password\" name=\"matKhau\" tag={Field} />\n                <ErrorMessage name=\"matKhau\" />\n              </FormGroup>\n              <FormGroup>\n                <Label>Họ tên</Label>\n                <Input type=\"text\" name=\"hoTen\" tag={Field} />\n                <ErrorMessage name=\"hoTen\" />\n              </FormGroup>\n              <FormGroup>\n                <Label>Số điện thoại</Label>\n                <Input type=\"text\" name=\"soDT\" tag={Field} />\n                <ErrorMessage name=\"soDT\" />\n              </FormGroup>\n              <FormGroup>\n                <Label>Email</Label>\n                <Input type=\"email\" name=\"email\" tag={Field} />\n                <ErrorMessage name=\"email\" />\n              </FormGroup>\n              <Button onClick={handleSubmit} color=\"primary\">\n                Đăng Ký\n              </Button>\n            </Form>\n          );\n        }}\n      </Formik>\n    </div>\n  );\n};\n\nexport default DangKy;\n"]},"metadata":{},"sourceType":"module"}