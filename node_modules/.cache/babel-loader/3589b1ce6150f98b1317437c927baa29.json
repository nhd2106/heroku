{"ast":null,"code":"import _objectWithoutProperties from \"c:\\\\Users\\\\ngohu\\\\Desktop\\\\hoc-renderprops-15122019\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"c:\\\\Users\\\\ngohu\\\\Desktop\\\\hoc-renderprops-15122019\\\\src\\\\Auth\\\\UserAuth.js\";\nimport React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\"; // Sử dụng HOC để override lại component Route, dùng để bảo vệ component không cho truy cập khi chưa đăng nhập\n\nconst UserAuth = (_ref) => {\n  let Component = _ref.component,\n      props = _objectWithoutProperties(_ref, [\"component\"]);\n\n  return React.createElement(Route, Object.assign({}, props, {\n    // props render này sử dụng kĩ thuật render props\n    render: routerProps => {\n      // routerProps là history, location, match\n      // Xử lý kiểm tra xem user đã đăng nhập hay chưa\n      const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\n\n      if (userInfo) {\n        // Nhớ phải pass routerProps vào component để component có thế sử dụng 3 props history, location và match\n        return React.createElement(Component, Object.assign({}, routerProps, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17\n          },\n          __self: this\n        }));\n      } // nếu k tìm thấy user trong localstorege sẽ dùng component Redirect để chuyển vế trang login\n\n\n      return React.createElement(Redirect, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }));\n}; // Cách sử dụng: sử dụng thay thế cho component Route, xem chi tiết ở App.js\n\n\nexport default UserAuth;","map":{"version":3,"sources":["c:/Users/ngohu/Desktop/hoc-renderprops-15122019/src/Auth/UserAuth.js"],"names":["React","Route","Redirect","UserAuth","Component","component","props","routerProps","userInfo","JSON","parse","localStorage","getItem"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC,C,CAEA;;AACA,MAAMC,QAAQ,GAAG,UAAwC;AAAA,MAA1BC,SAA0B,QAArCC,SAAqC;AAAA,MAAZC,KAAY;;AACvD,SACE,oBAAC,KAAD,oBAEMA,KAFN;AAGE;AACA,IAAA,MAAM,EAAEC,WAAW,IAAI;AACrB;AACA;AACA,YAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAAjB;;AACA,UAAIJ,QAAJ,EAAc;AACZ;AACA,eAAO,oBAAC,SAAD,oBAAeD,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP;AACD,OAPoB,CAQrB;;;AACA,aAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAdH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAkBD,CAnBD,C,CAqBA;;;AACA,eAAeJ,QAAf","sourcesContent":["import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\n// Sử dụng HOC để override lại component Route, dùng để bảo vệ component không cho truy cập khi chưa đăng nhập\nconst UserAuth = ({ component: Component, ...props }) => {\n  return (\n    <Route\n    \n      {...props}\n      // props render này sử dụng kĩ thuật render props\n      render={routerProps => {\n        // routerProps là history, location, match\n        // Xử lý kiểm tra xem user đã đăng nhập hay chưa\n        const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\n        if (userInfo) {\n          // Nhớ phải pass routerProps vào component để component có thế sử dụng 3 props history, location và match\n          return <Component {...routerProps} />;\n        }\n        // nếu k tìm thấy user trong localstorege sẽ dùng component Redirect để chuyển vế trang login\n        return <Redirect to=\"/login\" />;\n      }}\n    />\n  );\n};\n\n// Cách sử dụng: sử dụng thay thế cho component Route, xem chi tiết ở App.js\nexport default UserAuth;\n"]},"metadata":{},"sourceType":"module"}