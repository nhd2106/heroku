{"ast":null,"code":"import _defineProperty from\"C:\\\\Users\\\\ngohu\\\\Desktop\\\\hoc-renderprops-15122019\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"C:\\\\Users\\\\ngohu\\\\Desktop\\\\hoc-renderprops-15122019\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:\\\\Users\\\\ngohu\\\\Desktop\\\\hoc-renderprops-15122019\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import useCounter from\"./useCounter\";import useForm from\"./useForm\";// Validation của form nào thì form đó tự viết\n// LoginForm có 2 field là username và password\nexport var validation=function validation(values){var errors={};if(!values.username){errors.username=\"Không được để trống\";}if(!values.password){errors.password=\"Không được để trống\";}// Validate min user name\nif(values.username.length<5){errors.username=\"Độ đài ít nhất 3 kí tự\";}// Validate max user name\nif(values.username.length>15){errors.username=\"Độ đài tối đa 15 kí tự\";}return errors;};export var DemoHooks=function DemoHooks(){// useState nhận trả về 1 array 2 tham số\n// tham số đầu tiên là giá trị của state\n// tham số thứ 2 là một hàm dùng để thay đổi state\nvar _useState=useState(0),_useState2=_slicedToArray(_useState,2),count=_useState2[0],setCount=_useState2[1];var _useState3=useState({firstName:\"\",lastName:\"\"}),_useState4=_slicedToArray(_useState3,2),name=_useState4[0],setName=_useState4[1];// Sử dụng custom hooks useCounter\nvar _useCounter=useCounter(0),_useCounter2=_slicedToArray(_useCounter,3),number=_useCounter2[0],inc=_useCounter2[1],desc=_useCounter2[2];// Sử dụng custom hooks useForm\nvar _useForm=useForm({values:{username:\"\",password:\"\"},errors:{username:\"\",password:\"\"}},validation),_useForm2=_slicedToArray(_useForm,3),loginForm=_useForm2[0],handleChangeLoginForm=_useForm2[1],handleBlurLoginForm=_useForm2[2];// useEffect chạy sau khi state thay đổi và render lại\n// Nó nhận vào 2 tham số\n// 1: hàm callback để xử lý\n// 2: 1 array các tham số mà nó sẽ so sánh để quyết định xem có chạy useEffect sau khi render lại hay không\n// Hàm useEffect này chỉ được chạy khi count thay đổi\nuseEffect(function(){console.log(\"count sau khi render\",count);},[count]);// Hàm useEffect này chỉ được chạy khi name thay đổi\nuseEffect(function(){console.log(\"name sau khi render\",name);},[name]);// array không tham số useEffect chỉ chạy 1 lần duy nhất => tương ứng với componentDidMount\nuseEffect(function(){console.log(\"render 1 lần duy nhất\");},[]);// Không có tham số thứ 2, useEffect này sẽ chạy mỗi khi render lại\nuseEffect(function(){// Không gọi API trong đây\nconsole.log(\"render lại mỗi khi state hoặc props thay đổi\");});// useEffect và useState phải khai báo ở trên đầu component\n// Không được sử dụng trong if else hay vòng for\nvar handleChange=function handleChange(evt){// const [name, value] = evt.target;\nsetName(_objectSpread({},name,_defineProperty({},evt.target.name,evt.target.value)));};return React.createElement(\"div\",null,React.createElement(\"input\",{type:\"text\",name:\"username\",value:loginForm.values.username,onChange:handleChangeLoginForm,onBlur:handleBlurLoginForm}),loginForm.errors.username&&React.createElement(\"p\",null,loginForm.errors.username),React.createElement(\"input\",{type:\"text\",name:\"password\",value:loginForm.values.password,onChange:handleChangeLoginForm,onBlur:handleBlurLoginForm}),loginForm.errors.password&&React.createElement(\"p\",null,loginForm.errors.password));};export var HooksChild=function HooksChild(){useEffect(function(){var timeOut=setTimeout(function(){console.log(\"Render sau 1s\");},1000);console.log(\"HooksChild Render\");return function(){// Tương ứng với componentWillUnmount\n// Sẽ chạy khi component bị xoá khỏi DOM\n// Trong này ta thường sẽ xử lý clearTimeout, removeEvenlistener,...\nconsole.log(\"HooksChild Unmount\");clearTimeout(timeOut);};});return React.createElement(\"div\",null,\"Hello\");};","map":{"version":3,"sources":["C:/Users/ngohu/Desktop/hoc-renderprops-15122019/src/Hooks/DemoHooks.js"],"names":["React","useState","useEffect","useCounter","useForm","validation","values","errors","username","password","length","DemoHooks","count","setCount","firstName","lastName","name","setName","number","inc","desc","loginForm","handleChangeLoginForm","handleBlurLoginForm","console","log","handleChange","evt","target","value","HooksChild","timeOut","setTimeout","clearTimeout"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport useCounter from \"./useCounter\";\nimport useForm from \"./useForm\";\n\n// Validation của form nào thì form đó tự viết\n// LoginForm có 2 field là username và password\nexport const validation = values => {\n  let errors = {};\n  if (!values.username) {\n    errors.username = \"Không được để trống\";\n  }\n  if (!values.password) {\n    errors.password = \"Không được để trống\";\n  }\n  // Validate min user name\n  if (values.username.length < 5) {\n    errors.username = \"Độ đài ít nhất 3 kí tự\";\n  }\n  // Validate max user name\n  if (values.username.length > 15) {\n    errors.username = \"Độ đài tối đa 15 kí tự\";\n  }\n\n  return errors;\n};\n\nexport const DemoHooks = () => {\n  // useState nhận trả về 1 array 2 tham số\n  // tham số đầu tiên là giá trị của state\n  // tham số thứ 2 là một hàm dùng để thay đổi state\n  const [count, setCount] = useState(0);\n  const [name, setName] = useState({\n    firstName: \"\",\n    lastName: \"\"\n  });\n\n  // Sử dụng custom hooks useCounter\n  const [number, inc, desc] = useCounter(0);\n  // Sử dụng custom hooks useForm\n  const [loginForm, handleChangeLoginForm, handleBlurLoginForm] = useForm(\n    {\n      values: {\n        username: \"\",\n        password: \"\"\n      },\n      errors: {\n        username: \"\",\n        password: \"\"\n      }\n    },\n    validation\n  );\n\n  // useEffect chạy sau khi state thay đổi và render lại\n  // Nó nhận vào 2 tham số\n  // 1: hàm callback để xử lý\n  // 2: 1 array các tham số mà nó sẽ so sánh để quyết định xem có chạy useEffect sau khi render lại hay không\n  // Hàm useEffect này chỉ được chạy khi count thay đổi\n  useEffect(() => {\n    console.log(\"count sau khi render\", count);\n  }, [count]);\n\n  // Hàm useEffect này chỉ được chạy khi name thay đổi\n  useEffect(() => {\n    console.log(\"name sau khi render\", name);\n  }, [name]);\n\n  // array không tham số useEffect chỉ chạy 1 lần duy nhất => tương ứng với componentDidMount\n  useEffect(() => {\n    console.log(\"render 1 lần duy nhất\");\n  }, []);\n\n  // Không có tham số thứ 2, useEffect này sẽ chạy mỗi khi render lại\n  useEffect(() => {\n    // Không gọi API trong đây\n    console.log(\"render lại mỗi khi state hoặc props thay đổi\");\n  });\n\n  // useEffect và useState phải khai báo ở trên đầu component\n  // Không được sử dụng trong if else hay vòng for\n\n  const handleChange = evt => {\n    // const [name, value] = evt.target;\n    setName({ ...name, [evt.target.name]: evt.target.value });\n  };\n\n  return (\n    <div>\n      {/* <h1>Demo Hooks</h1>\n      <p>{count}</p>\n      <button onClick={() => setCount(count + 1)}>Cộng</button> */}\n      {/* {count % 2 === 0 && <HooksChild />} */}\n      {/* <input\n        type=\"text\"\n        name=\"firstName\"\n        value={name.firstName}\n        onChange={handleChange}\n      />\n      <input\n        type=\"text\"\n        name=\"lastName\"\n        value={name.lastName}\n        onChange={handleChange}\n      /> */}\n\n      {/* useCounter */}\n      {/* <p>{number}</p>\n      <button onClick={inc}>Tăng</button>\n      <button onClick={desc}>Giảm</button> */}\n\n      {/* useForm */}\n      <input\n        type=\"text\"\n        name=\"username\"\n        value={loginForm.values.username}\n        onChange={handleChangeLoginForm}\n        onBlur={handleBlurLoginForm}\n      />\n      {loginForm.errors.username && <p>{loginForm.errors.username}</p>}\n      <input\n        type=\"text\"\n        name=\"password\"\n        value={loginForm.values.password}\n        onChange={handleChangeLoginForm}\n        onBlur={handleBlurLoginForm}\n      />\n      {loginForm.errors.password && <p>{loginForm.errors.password}</p>}\n    </div>\n  );\n};\n\nexport const HooksChild = () => {\n  useEffect(() => {\n    let timeOut = setTimeout(() => {\n      console.log(\"Render sau 1s\");\n    }, 1000);\n    console.log(\"HooksChild Render\");\n    return () => {\n      // Tương ứng với componentWillUnmount\n      // Sẽ chạy khi component bị xoá khỏi DOM\n      // Trong này ta thường sẽ xử lý clearTimeout, removeEvenlistener,...\n      console.log(\"HooksChild Unmount\");\n      clearTimeout(timeOut);\n    };\n  });\n  return <div>Hello</div>;\n};\n"]},"metadata":{},"sourceType":"module"}